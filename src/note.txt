Java NIO  
since jkd1.4  用于更底层的实现，比Java io效率高。常用于服务器等非阻塞式I/O
Netty 就是基于java nio底层实现的。

...........................................
字节流---通常用于读写普通文件，如二进制文件；按字节[数组]为最小单位
InputStream 
OutputStream  抽象类

FileInputStream   最基本的字节输入输出流，其他的流均以它为基础实现
FileOutputStream
 
BufferedInputStream			可包装FileInputStream
BufferedOutputStream

DataInputStream   按基本类型读，一次读一个int,double 等基本类型
DataOutputStream


ObjectInputStream  一次读写一个[实体]对象，且自定义的实体类implements Serializable
ObjectOutputStream	对象输入、出流，基于DataInputStream，也提供按基本类型读写的方法

FilterInputStream
FilterOutputStream

这些流，可多层包装，每一层只做好一件事情。



字节数组输出流--不需要包装
默认32字节，会根据需要自动增长；数据内容是放在内存里的
本质是一个  可变长的--内存数组。
ByteArrayOutputStream byteOut = new ByteArrayOutputStream()
ByteArrayInputStream


字符流---通常用于读取可阅读的源文件，比如文本。
Reader
Writer --抽象类

FileReader
FileWriter


RandomAccessFile实现了--DataInput、DataOutput接口，既可输入，也可输出








